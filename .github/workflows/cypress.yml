name: CI/CD Pipeline (macOS)

permissions:
  contents: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Cypress tests and generate report
      - name: Run Cypress tests and generate report
        run: npm run test-and-generate-report

      # Step 5: Upload Cypress test results as artifact (optional)
      - name: Upload Cypress test results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: cypress/results/

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: cypress/results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Send email with Cypress report and link to deployed page
      - name: Send email with Cypress report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: yurkasedow0@gmail.com
          from: ${{ secrets.MAIL_USERNAME }}
          subject: 'Cypress Test Report'
          body: |
            <html>
              <body>
                <h2>Cypress Test Report</h2>
                <p>The test results are attached in the report.</p>
                <p>You can also view the test results online at: <a href="https://avngrss.github.io/automationexercise/">GitHub Pages Report</a></p>
              </body>
            </html>
          content_type: text/html
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}